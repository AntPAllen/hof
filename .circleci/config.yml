version: 2.1

workflows:
  main:
    jobs:
      - hof_ci:
          context: SonarCloud

jobs:

  # Build and test hof, in that order!
  hof_ci:
    machine: true

    steps:
      - checkout

      # setup and prep fetch
      - run:
          name: Prep system
          command: |
            sudo apt-get update -y
            sudo apt-get install -y tree jq
            # Version info
            GO_VER=1.14.4
            CUE_VER=0.2.0

            # Install Go
            sudo rm -rf /usr/local/go
            curl -LO https://dl.google.com/go/go${GO_VER}.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go${GO_VER}.linux-amd64.tar.gz

            # Install Cue
            curl -LO https://github.com/cuelang/cue/releases/download/v${CUE_VER}/cue_${CUE_VER}_Linux_x86_64.tar.gz
            tar -xf cue_${CUE_VER}_Linux_x86_64.tar.gz
            sudo mv cue /usr/local/bin/cue

      # fetch Go dependencies
      - run:
          name: Fetch deps
          command: |
            go mod vendor

      # build Hof cli
      - run:
          name: Build hof
          command: |
            go build -o hof cmd/hof/main.go
            sudo cp hof /usr/local/bin/hof


      # fetch Cue dependencies
      #- run: |
          #./hof mod vendor cue

      # TODO, test regen has no git diff

      # Hof has a built in test command to facilitate running tests
      # en masse, regardless of the language, technology, or framework
      # you can also script all of the processes that go around a
      # complete testing setup with tasks like collectiong and reporting coverage statistics

      # prep test related dir
      - run:
          name: Test prep
          command: |
            echo "$(id -u):$(id -g)"
            sudo mkdir -p /no-home
            sudo chown 1001:1002 -R /no-home

      - run:
          name: Tests for coverage
          command: |
            # run all tests
            set +e
            hof test test.cue -t cover
            set -e

      # Build our custom SonarCloud image
      - run:
          name: SonarCloud Custom Image
          command: |
            ./ci/sc/build.sh

      # Upload reports now that they have been generated and collected
      - run:
          name: SonarCloud Scan
          command: |
            ./ci/sc/run.sh

      # Rerun tests for failures, information, and inpsection purposes
      - run:
          name: Tests for humans
          command: |
            # run all tests
            hof test test.cue -t test

